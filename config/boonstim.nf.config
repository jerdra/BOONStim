import nextflow.util.Duration

singularity {
    autoMounts=true
    enabled=true
}

// Partition assignment functions
def get_queue(w, mapping){
    def td_mapping = mapping.collectEntries{k,v -> [new Duration(k), v]}
    def ps = td_mapping.grep{it.key >= w}.sort{it.key}
    return ps.first().value
}


// Repository paths
repo = "/projects/jjeyachandra/BOONStim/"
bin = "${repo}/bin"
resources = "${repo}/resources"
atlas = "${repo}/resources/templates/"
msm = "${repo}/resources/msm_conf/"
zz_templates = "${repo}/resources/zz_templates/"
geo_templates = "${repo}/resources/geo_templates/"
configDir = "${repo}/config"

// Mapping to various optimization strategies
optimization_map = [
    "bayesian": "${repo}/modules/bayes_opt.nf",
    "grid": "${repo}/modules/grid_opt.nf",
    "particle_swarm": "${repo}/modules/particle_opt.nf"
]

optimization_config_map = [
    "bayesian": "${configDir}/bayes_opt.nf.config",
    "grid": "${configDir}/grid_opt.nf.config",
    "particle_swarm": ""
]

params.method = "bayesian"
params.optimization_module = optimization_map["${params.method}"]

// Set params
params.bin = "${bin}"
params.zz = "${zz_templates}"
params.geo = "${geo_templates}"
params.cache_dir = null
params.atlas = "${atlas}"
params.num_cpus = 8
params.scratch = true
params.didt = 1e6

// Left hand-MT coordinate
params.ref_coords = [
                    ["left_knob", -42, -16, 68],
                    ["right_knob", 42, -16, 68]
                   ]
params.ref_dist=12

profiles {
    scc {
        // Queue specification
        pmap = ["12:00:00": "short",
                "1:00:00:00": "medium",
                "2:00:00:00": "long",
                "166:00:00:00": "verylong"]
        partition = { t -> get_queue(t, pmap) }
        engine = 'SLURM'
        includeConfig "${scc_base}/${configDir}/processes.nf.config"
        includeConfig "${scc_base}/" + optimization_config_map["${params.method}"]
    }

    local {
        partition = "local"
        engine = 'local'
        includeConfig "${configDir}/processes.nf.config"
        includeConfig optimization_config_map["${params.method}"]
    }

    kimel {
        partition = "high-moby"
        engine = 'SLURM'
        includeConfig "${configDir}/processes.nf.config"
        includeConfig optimization_config_map["${params.method}"]
    }
}

